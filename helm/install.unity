#/bin/bash
NS="unity"

# Verify the kubernetes installation has the feature gates needed.
sh ./verify.kubernetes
rc=$?
if [ $rc -ne 0 ]
then
     echo "*******************************************************************************"
     echo "Warning: Kubernetes --feature-gates not correctly configured... it may not work"
     echo "*******************************************************************************"
     sleep 5
fi

# Check if unity-certs exists. If not, then create it
kubectl get secrets -n "$NS" | grep unity-certs --quiet
if [ $? -ne 0 ];
    then echo "*** Couldn't find unity-certs. Creating an empty secret. Delete it and re-create it if you want to validate unisphere certificates ***"
    kubectl create -f ./emptysecret.yaml
fi

# Check for required CustomResourceDefinitions
kubectl get customresourcedefinitions | grep csidrivers --quiet
if [ $? -ne 0 ]
then
    echo "installing csidriver CRD"; kubectl create -f csidriver.yaml
fi

kubectl get customresourcedefinitions | grep nodeinfo --quiet
if [ $? -ne 0 ]
then
    echo "installing nodeinfo CRD"; kubectl create -f nodeinfo.yaml
fi

kubectl get customresourcedefinitions | grep snapshot --quiet
if [ $? -ne 0 ]
then
    echo "installing snapshot CRD"; kubectl create -f snapshot-crd.yaml
fi

helm install --values myvalues.yaml --name unity --namespace "$NS" ./csi-unity
sleep 10
kubectl get pods --namespace "$NS"
sleep 5
kubectl get pods --namespace "$NS"
sleep 5
kubectl get pods --namespace "$NS"
echo "CSIDrivers:"
kubectl get csidrivers
echo "CSINodeInfos:"
kubectl get csinodeinfos
echo "StorageClasses:"
kubectl get storageclass

